# install JumpServer by OS_family
- name: Install this role on {{ansible_os_family}}
  include: "{{ansible_os_family}}.yml"

# configure JumpServer

- name: Create jumpserver User
  user:
    name: jumpserver
    shell: /usr/sbin/nologin
    home: /data/wwwroot/jumpserver
    create_home: no

- name: Create jumpserver directory
  file:
    path: /data/wwwroot/jumpserver
    state: directory
    owner: jumpserver
    group: jumpserver
    
- name: install jumpserver 
  shell: |
    cd /opt
#    yum -y install wget git
    rm -rf setuptools
    git clone --depth=1 {{jumpserver_download_url}}
    cd /setuptools
    cp -rf config_example.conf config.conf
    bash jmsctl.sh install



- name: Restart jumpserver
  service:
    name: jms_core
    state: restarted
    enabled: yes
     
- name: Set database connection /opt/setuptools/config.conf
  lineinfile:
    dest: /opt/setuptools/config.conf
    regexp: 'DB_PASSWORD='
    line: 'DB_PASSWORD="{{jumpserver_db_password}}"'
    

# set soft link, -b cover the exist links
# ln -sb src des
- name: set soft link
  shell: |
    ln -sb /usr/lib/systemd/system/jms_core.service  /usr/lib/systemd/system/jumpserver.service 
    ln -sb /opt/setuptools  /data/wwwroot/jumpserver
    ln -sb /opt/setuptools/config  /data/config/jumpserver

# Check version,
# must use sudo sh -c to solve the no-root permission
#- block:
#  - name: Check JumpServer Version
#    shell: sudo sh -c "jumpserverctl status | grep 'JumpServer version' 1>> /data/logs/install_version.txt"

#  - name: Check Erlang Version
#    shell: sudo sh -c 'echo "Erlang $(yum info erlang | grep Version | sed -n 1p)" 1>> /data/logs/install_version.txt'
#    when: ansible_os_family=="RedHat"

# check service state
#- name: Check JumpServer Service
#  shell: systemctl status jumpserver | grep Active*
#  register: check_jumpserver_service
#  notify: check_jumpserver_service
